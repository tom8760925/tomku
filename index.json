[{"content":"student 這篇是C的練習實作第二篇 練習使用迴圈、判斷式。\n#include \u0026lt;stdio.h\u0026gt;//載入指令 #include \u0026lt;stdbool.h\u0026gt;//載入指令 void student_input();//函數宣告 int main(){ int n=0;//宣告 while (n != 2)//判斷是否結束迴圈 { printf(\u0026#34;輸入1輸入學生資料\\n輸入2離開\\n請輸入1或2:\u0026#34;);//顯示需要輸入的值 scanf(\u0026#34;%d\u0026#34;,\u0026amp;n);//輸入的值 switch (n)//判斷輸入的值 { case 1: student_input();//呼叫函數 break; case 2: printf(\u0026#34;離開\\n\u0026#34;);//結束迴圈 break; default: printf(\u0026#34;輸入錯誤\\n\u0026#34;);//輸入的值錯誤 break; } } return 0; } void student_input(){ char name[]=\u0026#34;\u0026#34;; int no=0,phone=0; printf(\u0026#34;請輸入姓名:\u0026#34;);//顯示需要輸入的值 scanf(\u0026#34;%s\u0026#34;,name);//輸入的值 printf(\u0026#34;姓名:%s\\n\u0026#34;,name);//顯示輸入的值 printf(\u0026#34;請輸入學號:\u0026#34;);//顯示需要輸入的值 scanf(\u0026#34;%d\u0026#34;,\u0026amp;no);//輸入的值 printf(\u0026#34;學號:%d\\n\u0026#34;,no);//顯示輸入的值 printf(\u0026#34;請輸入電話:\u0026#34;);//顯示需要輸入的值 scanf(\u0026#34;%d\u0026#34;,\u0026amp;phone);//輸入的值 printf(\u0026#34;電話:%d\\n\u0026#34;,phone);//顯示輸入的值 } 程式存放在github中連結:github\n","permalink":"https://tom8760925.github.io/tomku/c/2024/practice02/","summary":"這篇是C的練習實作第二篇","title":"C語言的練習-練習實作02"},{"content":"迴圈 這篇是C的練習筆記第六篇\nfor C的for寫法是\n#include \u0026lt;stdio.h\u0026gt; int main(){ for(int n = 0;n\u0026lt;5;n++) { printf(\u0026#34;p:%d\\n\u0026#34;,n); } return 0; } 結果\np:0 p:1 p:2 p:3 p:4 for的參數可以簡化\n#include \u0026lt;stdio.h\u0026gt; int main(){ int n = 0; for(;n\u0026lt;2;) { printf(\u0026#34;p:%d\\n\u0026#34;,n); n++; } return 0; } 結果\np:0 p:1 while C的while寫法是\n#include \u0026lt;stdio.h\u0026gt; int main(){ int n = 0; while (n\u0026lt;5) { printf(\u0026#34;p:%d\\n\u0026#34;,n); n++; } return 0; } 結果\np:0 p:1 p:2 p:3 p:4 do while C的do while寫法是\n#include \u0026lt;stdio.h\u0026gt; int main(){ int n = 0; do{ printf(\u0026#34;p:%d\\n\u0026#34;,n); } while (n != 0); return 0; } break C的break寫法是\n#include \u0026lt;stdio.h\u0026gt; int main(){ for(int n = 0;n\u0026lt;5;n++) { if(n == 2){ break; } printf(\u0026#34;p:%d\\n\u0026#34;,n); } return 0; } 結果\np:0 p:1 continue C的continue寫法是\n#include \u0026lt;stdio.h\u0026gt; int main(){ for(int n = 0;n\u0026lt;5;n++) { if(n == 2){ continue; } printf(\u0026#34;p:%d\\n\u0026#34;,n); } return 0; } 結果\np:0 p:1 p:3 p:4 for可以寫這樣\n#include \u0026lt;stdio.h\u0026gt; int main(){ for(int a = 1,b = 1;a\u0026lt;=9;a++,b++) { printf(\u0026#34;%d*%d=%d\\n\u0026#34;,a,b,a*b); } return 0; } 結果\n1*1=1 2*2=4 3*3=9 4*4=16 5*5=25 6*6=36 7*7=49 8*8=64 9*9=81 ","permalink":"https://tom8760925.github.io/tomku/c/2024/no06/","summary":"這篇是C的練習筆記第六篇","title":"C語言的練習-迴圈"},{"content":"student 這篇是C的練習實作第一篇 練習使用函式宣告，輸入姓名、學號、電話，並顯示出來。\n#include \u0026lt;stdio.h\u0026gt;//載入指令 void student_input();//函數宣告 int main(){ student_input();//呼叫函數 return 0; } void student_input(){ char name[]=\u0026#34;\u0026#34;; int no=0,phone=0; printf(\u0026#34;請輸入姓名:\u0026#34;);//顯示需要輸入的值 scanf(\u0026#34;%s\u0026#34;,name);//輸入的值 printf(\u0026#34;姓名:%s\\n\u0026#34;,name);//顯示輸入的值 printf(\u0026#34;請輸入學號:\u0026#34;);//顯示需要輸入的值 scanf(\u0026#34;%d\u0026#34;,\u0026amp;no);//輸入的值 printf(\u0026#34;學號:%d\\n\u0026#34;,no);//顯示輸入的值 printf(\u0026#34;請輸入電話:\u0026#34;);//顯示需要輸入的值 scanf(\u0026#34;%d\u0026#34;,\u0026amp;phone);//輸入的值 printf(\u0026#34;電話:%d\\n\u0026#34;,phone);//顯示輸入的值 } 程式存放在github中連結:github\n","permalink":"https://tom8760925.github.io/tomku/c/2024/practice01/","summary":"這篇是C的練習實作第一篇","title":"C語言的練習-練習實作01"},{"content":"if 這篇是C的練習筆記第五篇\nC的if寫法是\n#include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdbool.h\u0026gt; int main(){ bool p = true; if(p){ printf(\u0026#34;p:%s\\n\u0026#34;,p?\u0026#34;true\u0026#34;:\u0026#34;fales\u0026#34;); } else{ printf(\u0026#34;p:%s\\n\u0026#34;,p?\u0026#34;true\u0026#34;:\u0026#34;fales\u0026#34;); } return 0; } 結果\np:true if也可以寫成這樣\n#include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdbool.h\u0026gt; int main(){ bool p = false; p = (2\u0026gt;1)?true:false; printf(\u0026#34;p:%s\\n\u0026#34;,p?\u0026#34;true\u0026#34;:\u0026#34;fales\u0026#34;); return 0; } 結果\np:true 多條件if\n#include \u0026lt;stdio.h\u0026gt; int main(){ int a=1,b=2; if(a\u0026lt;b){ printf(\u0026#34;p:%d\u0026lt;%d\\n\u0026#34;,a,b); } else if(a\u0026gt;b) { printf(\u0026#34;p:%d\u0026gt;%d\\n\u0026#34;,a,b); } else{ printf(\u0026#34;p:%d=%d\\n\u0026#34;,a,b); } return 0; } 結果\np:1\u0026lt;2 多條件還有\n#include \u0026lt;stdio.h\u0026gt; int main(){ char n=\u0026#39;a\u0026#39;; switch (n) { case \u0026#39;a\u0026#39;: printf(\u0026#34;p:apple\\n\u0026#34;); break; case \u0026#39;b\u0026#39;: printf(\u0026#34;p:banana\\n\u0026#34;); break; default: printf(\u0026#34;p:error\\n\u0026#34;); break; } return 0; } 結果\np:apple ","permalink":"https://tom8760925.github.io/tomku/c/2024/no05/","summary":"這篇是C的練習筆記第五篇","title":"C語言的練習-if"},{"content":"printf 和 scanf 這篇是C的練習筆記第四篇\nc的輸入和輸出分別為scanf 和 printf\n要使用需要加上最上面\n#include \u0026lt;stdio.h\u0026gt; printf c輸出是使用printf，要使用printf也需要設定資料型態和變數。\n#include \u0026lt;stdio.h\u0026gt; int main(){ int a=1; printf(\u0026#34;p:%d\\n\u0026#34;,a); return 0; } 結果\np:1 型態 在使用printf時，需要設定資料型態，而型態有好幾種。\n#include \u0026lt;stdio.h\u0026gt; int main(){ printf(\u0026#34;十進位:%d\\n\u0026#34;,16); printf(\u0026#34;十進制無符號:%u\\n\u0026#34;,16); printf(\u0026#34;十進位浮點數:%f\\n\u0026#34;,16.16); printf(\u0026#34;八進位:%o\\n\u0026#34;,16); printf(\u0026#34;十六進位:%x\\n\u0026#34;,16); printf(\u0026#34;十六進位浮點數:%a\\n\u0026#34;,16.16); printf(\u0026#34;指數:%e\\n\u0026#34;,16.16); printf(\u0026#34;判斷使用%%f和%%e，哪個以較短較精簡能夠輸出:%g\\n\u0026#34;,16.16); printf(\u0026#34;單一字元:%c\\n\u0026#34;,\u0026#39;A\u0026#39;); printf(\u0026#34;字串:%s\\n\u0026#34;,\u0026#34;AA\u0026#34;); char a[] = \u0026#34;AA\u0026#34;; printf(\u0026#34;記憶體位置:%p\\n\u0026#34;,a); printf(\u0026#34;專門是unsigned long:%lu\\n\u0026#34;,(unsigned long)16); printf(\u0026#34;專門是unsigned long long:%llu\\n\u0026#34;,(unsigned long long)16); printf(\u0026#34;%%:%%A\\n\u0026#34;); return 0; } 結果\n十進位:16 十進制無符號:16 十進位浮點數:16.160000 八進位:20 十六進位:10 十六進位浮點數:0x1.028f5c28f5c29p+4 指數:1.616000e+01 判斷使用%f和%e，哪個以較短較精簡能夠輸出:16.16 單一字元:A 字串:AA 記憶體位置:0x16fdff048 專門是unsigned long:16 專門是unsigned long long:16 %:%A printf設定 printf可以設定如何顯示\n#include \u0026lt;stdio.h\u0026gt; int main(){ printf(\u0026#34;加上.和要顯示第幾位，設定四捨五入:%.2f\\n\u0026#34;,16.1666); printf(\u0026#34;加上.和要顯示第幾位:%.2s\\n\u0026#34;,\u0026#34;AAA\u0026#34;); printf(\u0026#34;加上數字，預留字元有少就補空格:%3d\\n\u0026#34;,16);//預留３個字元 printf(\u0026#34;加上數字，預留字元有少就補空格:%10f\\n\u0026#34;,16.16);//預留10個字元 printf(\u0026#34;加上數字，預留字元有少就補空格:%2c\\n\u0026#34;,\u0026#39;A\u0026#39;);//預留2個字元 printf(\u0026#34;加上數字，預留字元有少就補空格:%3s\\n\u0026#34;,\u0026#34;AA\u0026#34;);//預留3個字元 printf(\u0026#34;加上0和數字，預留字元有少就補0:%03d\\n\u0026#34;,16); printf(\u0026#34;加上*，預留字元有少就補空格:%*d\\n\u0026#34;,3,16); printf(\u0026#34;加上*，預留字元有少就補空格:%*d|%*d\\n\u0026#34;,3,16,3,16); printf(\u0026#34;加上負號，在預留字元範圍內靠左對齊:%-3d\\n\u0026#34;,16); printf(\u0026#34;加上+，顯示正負號:%+3d\\n\u0026#34;,16); printf(\u0026#34;加上空格，在前面加上空格:% d\\n\u0026#34;,16); printf(\u0026#34;加上#，在x、o前面加上0x非0值情況時:%#x\\n\u0026#34;,16); return 0; } 結果\n加上.和要顯示第幾位，設定四捨五入:16.17 加上.和要顯示第幾位:AA 加上數字，預留字元有少就補空格: 16 加上數字，預留字元有少就補空格: 16.160000 加上數字，預留字元有少就補空格: A 加上數字，預留字元有少就補空格: AA 加上0和數字，預留字元有少就補0:016 加上*，預留字元有少就補空格: 16 加上*，預留字元有少就補空格: 16| 16 加上負號，在預留字元範圍內靠左對齊:16 加上+，顯示正負號:+16 加上空格，在前面加上空格: 16 加上#，在x、o前面加上0x非0值情況時:0x10 scenf c輸入是使用scenf，要使用scanf需要設定資料型態和變數記憶體位置。\n#include \u0026lt;stdio.h\u0026gt; int main(){ int a=0; printf(\u0026#34;s:\u0026#34;); scanf(\u0026#34;%d\u0026#34;,\u0026amp;a); printf(\u0026#34;s:%d\\n\u0026#34;,a); return 0; } 結果\ns:1 s:1 型態 在使用scanf時，需要設定資料型態，而型態有好幾種。\n#include \u0026lt;stdio.h\u0026gt; int main(){ int a = 0; unsigned int e = 0; float b = 0; double f = 0; char c = \u0026#39;A\u0026#39;; char d[] = \u0026#34;\u0026#34;; void *g = NULL; scanf(\u0026#34;%d\u0026#34;,\u0026amp;a);//十進位 scanf(\u0026#34;%u\u0026#34;,\u0026amp;e);//十進制無符號 scanf(\u0026#34;%f\u0026#34;,\u0026amp;b);//十進位浮點數 scanf(\u0026#34;%lf\u0026#34;,\u0026amp;f);//十進位浮點數 scanf(\u0026#34;%o\u0026#34;,\u0026amp;a);//八進位 scanf(\u0026#34;%x\u0026#34;,\u0026amp;a);//十六進位 scanf(\u0026#34;%i\u0026#34;,\u0026amp;a);//十進位八進位十六進位 scanf(\u0026#34;%a\u0026#34;,\u0026amp;b);//浮點數 scanf(\u0026#34;%e\u0026#34;,\u0026amp;b);//指數 scanf(\u0026#34;%g\u0026#34;,\u0026amp;b);//判斷使用%%f和%%e，哪個比較短較精簡 scanf(\u0026#34;%c\u0026#34;,\u0026amp;c);//單一字元 scanf(\u0026#34;%s\u0026#34;,d);//字串 scanf(\u0026#34;%p\u0026#34;,\u0026amp;g);//記憶體位置 return 0; } scanf設定 scanf的輸入可以設定\n#include \u0026lt;stdio.h\u0026gt; int main(){ char a[] = \u0026#34;\u0026#34;,b[3],c,d; scanf(\u0026#34;%[1-5]\u0026#34;,a); //設定輸入範圍，這樣設定會限制只能輸入1到5，輸入136只接收13，但輸入1363只接收13 scanf(\u0026#34;%[^1-5]\u0026#34;,a); //加上^，改為排除 scanf(\u0026#34;%2s\u0026#34;,b);//限制輸入字元 scanf(\u0026#34;%c-%c\u0026#34;,c,d); //輸入多個值，需要設定字元中間的區隔，這裡使用-在輸入值時需要依照設定區隔，沒有設定也會自動區隔。 return 0; } 其他 除了使用scanf 和 printf，還有其他可以用\n#include \u0026lt;stdio.h\u0026gt; int main(){ char a[50]; getchar();//輸入字元並只傳出一個字元 fgets(a,sizeof(a),stdin);//輸入字串 putchar(\u0026#39;A\u0026#39;);//只能輸出字char putchar(65);//會轉換ASCII得到Ａ puts(\u0026#34;AAA\u0026#34;);//輸出字串 return 0; } 跳脫字元 #include \u0026lt;stdio.h\u0026gt; int main(){ printf(\u0026#34;\\\\n:A\\n\u0026#34;);//換行 printf(\u0026#34;\\\\t:\\tA\\n\u0026#34;);//tab printf(\u0026#34;\\\\b:\\bA\\n\u0026#34;);//backspace printf(\u0026#34;\\\\r:\\rABC\\n\u0026#34;); printf(\u0026#34;\\\\f:\\fA\\n\u0026#34;);//跳到下一行 printf(\u0026#34;\\\\\u0026#39;:\\\u0026#39;A\\n\u0026#34;); printf(\u0026#34;\\\\\\\u0026#34;:\\\u0026#34;A\\n\u0026#34;); printf(\u0026#34;\\\\:\\\\A\\n\u0026#34;); return 0; } 結果\n\\n:A \\t:\tA \\bA ABC \\f: A \\\u0026#39;:\u0026#39;A \\\u0026#34;:\u0026#34;A \\:\\A 參考資料:C 标准库 – \u0026lt;stdio.h\u0026gt; | 菜鸟教程\n","permalink":"https://tom8760925.github.io/tomku/c/2024/no04/","summary":"這篇是C的練習筆記第四篇","title":"C語言的練習-printf 和 scanf"},{"content":"第一個程式 這篇是C的練習筆記第三篇\n起始程式 C跟其他程式一樣都有起始程式\nint main(){ return 0; } 最前面是回傳的型態\n程式結束時需要回傳0代表程式正常結束\n函數 如果沒有要回傳函數，在回傳的型態使用void\n在使用函數前，C是需要在起始程式前加上函數宣告\n#include \u0026lt;stdio.h\u0026gt; int test(int n); int main(){ int a = 0; a = test(1); printf(\u0026#34;p:%d\\n\u0026#34;,a); return 0; } int test(int n){ return n; } 結果\np:1 這樣程式在執行程式就知道有test的函數\n遞迴 C也有遞迴，a會等於5\n#include \u0026lt;stdio.h\u0026gt; int test(int n); int main(){ int a = 0; a = test(0); printf(\u0026#34;p:%d\\n\u0026#34;,a); return 0; } int test(int n){ n++; if(n == 5){ return n; } else{ return test(n); } } 結果\np:5 ","permalink":"https://tom8760925.github.io/tomku/c/2024/no03/","summary":"這篇是C的練習筆記第三篇","title":"C語言的練習-第一個程式"},{"content":"常數 這篇是C的練習筆記第二篇 記錄C有哪些常數\n在常數前面加上usigned，會變沒有負號\n種類 名稱 記憶體空間 加usigned 整數 int 4 Bytes 可 short 2 Bytes 可 long 4 Bytes 可 浮點數 float 4 Bytes 不可 double 8 Bytes 不可 字元 char 1 Bytes 可 C也有bool但要加上\n#include \u0026lt;stdbool.h\u0026gt; 才能使用bool\n但使用printf無法直接顯示ture 或 false，需要使用其他方法，而其中一個方法。\n#include \u0026lt;stdio.h\u0026gt; #include \u0026lt;stdbool.h\u0026gt; int main(){ bool p = true; printf(\u0026#34;p:%s\\n\u0026#34;,p?\u0026#34;true\u0026#34;:\u0026#34;fales\u0026#34;); return 0; } 結果\np:true c使用void其中一個方法是存放記憶體位置，p會存放a的記憶體位置。\n#include \u0026lt;stdio.h\u0026gt; int main(){ int a = 11; void *p; p = \u0026amp;a; printf(\u0026#34;p:%p\\n\u0026#34;,\u0026amp;a); printf(\u0026#34;p:%p\\n\u0026#34;,p); printf(\u0026#34;p:%p\\n\u0026#34;,\u0026amp;p); return 0; } 結果\np:0x16f37f2d8 p:0x16f37f2d8 p:0x16f37f2d0 ","permalink":"https://tom8760925.github.io/tomku/c/2024/no02/","summary":"這篇是C的練習筆記第二篇","title":"C語言的練習-常數"},{"content":"環境設置 這篇是C的練習筆記第一篇\n以下是在MAC進行操作執行\n安裝VSCODE 去以下網址下載VSCODE\nhttps://code.visualstudio.com/ 安裝VSCODE插建 安裝C的插件\nhttps://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools-extension-pack 繁體插件\nhttps://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hant 起始設定 先在程式資料夾中新增檔案，名子隨意副檔名為.C\n點選新增的.C檔案，再點選右上角齒輪\nC/C++:clang 建置及偵錯使用中的檔案 就會新增2個json欓 接著在收尋欄輸入\n\u0026gt;c/c++:Edit Configurations(JSON) 點選後會新增一個JSON檔案\n啟動測試 接著就能執行程式偵錯 有兩個方式可以偵錯\n1.直接點上方的執行-\u0026gt;進行偵錯 但這個方法在使用scanf，輸入時會有問題，可以在launch.json裡面修改參數externalConsole改成true，就會額外乎叫終端機視窗。 2.點右邊上三角形下拉選點單，選CompileRun : Compile with default flags \u0026amp; Run with default arguments，就能直接在vscode裡的終端機進行操作，使用scanf輸入也不會有問題。 沒問題就能直接執行.C檔案\n有問題可能是因為.C檔案內沒有程式，可以先寫個起始程式，因該就能執行。\nint main(){ return 0; } 參考資料:Configure VS Code for Clang/LLVM on macOS\n","permalink":"https://tom8760925.github.io/tomku/c/2024/no01/","summary":"這篇是C的練習筆記第一篇","title":"C語言的練習-環境設置"}]